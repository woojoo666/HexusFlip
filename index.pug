video(id='player' controls autoplay)
img(id='capturedImg')
button(onclick='capture();') take photo
script(src="/socket.io/socket.io.js")
script(src="https://ajax.googleapis.com/ajax/libs/angularjs/1.5.6/angular.min.js")
script(src="https://code.jquery.com/jquery-3.1.1.min.js")
script.
	const player = document.getElementById('player');

	// use "window.location.href" so it doesn't matter if you use localhost or the ip address to access the server
	var socket = io.connect(window.location.href, {secure: true});

	function capture () {};

	navigator.mediaDevices.enumerateDevices().then(function (devices) {
		var cameraDevices = devices.filter(device => device.kind == 'videoinput');
		var backCameraRegex = /back|rear/; // regex to find the back camera based on its label
		var backCamera = cameraDevices.filter(device => backCameraRegex.test(device.label.toLowerCase()))[0];

		socket.emit('cameraDevices', backCamera);

		function startStream () {
			navigator.mediaDevices.getUserMedia({ video: {deviceId: {exact: backCamera.deviceId} } })
				.then((stream) => {
					player.srcObject = stream;
					var track = stream.getVideoTracks()[0];
					var imageCapture = new ImageCapture(track);
					capture = () => imageCapture.takePhoto().then(blob => $('#capturedImg')[0].src = URL.createObjectURL(blob));
				});
		}

		startStream();
	});
	socket.on('news', function (data) {
		console.log(data);
		socket.emit('my other event', { my: 'data' });
	});
