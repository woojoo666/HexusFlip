video(id='player' controls autoplay)
button(onclick='capture();') take photo
script(src="/socket.io/socket.io.js")
script(src="https://ajax.googleapis.com/ajax/libs/angularjs/1.5.6/angular.min.js")
script(src="https://code.jquery.com/jquery-3.1.1.min.js")
script.
	const player = document.getElementById('player');

	const socket_namespace = '/index';

	var socket = io.connect(socket_namespace, {secure: true});

	function capture () {};

	navigator.mediaDevices.enumerateDevices().then(function (devices) {
		var cameraDevices = devices.filter(device => device.kind == 'videoinput');
		var backCameraRegex = /back|rear/; // regex to find the back camera based on its label
		var backCamera = cameraDevices.filter(device => backCameraRegex.test(device.label.toLowerCase()))[0];

		socket.emit('cameraDevices', backCamera);

		const constraints = {
		};

		function startStream () {
			var track;
			var imageCapture;
			navigator.mediaDevices.getUserMedia({ video: {deviceId: {exact: backCamera.deviceId} } })
				.then((stream) => {
					player.srcObject = stream;
					track = stream.getVideoTracks()[0];
					return track.applyConstraints(constraints)
				})
				.then(() => {
					imageCapture = new ImageCapture(track);
					socket.on('takeCapture', function () {
						console.log('takeCapture');
						imageCapture.takePhoto({imageWidth: 1200, imageHeight: 1200}).then(blob => socket.emit('captured', blob));
					});

					return imageCapture.getPhotoCapabilities();
				})
				.then(photoCapabilities => {
					const settings = imageCapture.track.getSettings();
					console.log("Width:")
					console.log("min: " + photoCapabilities.imageWidth.min);
					console.log("max: " + photoCapabilities.imageWidth.max);
					console.log("step: " + photoCapabilities.imageWidth.step);

					console.log("Height:")
					console.log("min: " + photoCapabilities.imageHeight.min);
					console.log("max: " + photoCapabilities.imageHeight.max);
					console.log("step: " + photoCapabilities.imageHeight.step);

					return imageCapture.getPhotoSettings();
				})
				.then(photoSettings => {
				  	console.log("image width: " + photoSettings.imageWidth);
				  	console.log("image height: " + photoSettings.imageHeight);
				});
		}

		startStream();
	});
	socket.on('news', function (data) {
		console.log(data);
		socket.emit('my other event', { my: 'data' });
	});
