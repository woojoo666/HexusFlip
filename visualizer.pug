script(src="/socket.io/socket.io.js")
canvas(id="canvas" width="800" height="800")
script.
	const canvas = document.getElementById("canvas");
	const ctx = canvas.getContext("2d");

	const socket_namespace = '/visualizer';

	var socket = io.connect(socket_namespace, {secure: true});

	const offset = { x: 300, y:300 }
	var point = (x, y) => [ x+offset.x, y+offset.y ];

	var totems = [];

	var activeTotem = null;

	function redraw(cameraPose) {
		ctx.clearRect(0, 0, canvas.width, canvas.height);
		/*
		// draw origin
		ctx.beginPath(); 
		ctx.strokeStyle = "black";
		ctx.moveTo(...point(-20, 0));
		ctx.lineTo(...point(20, 0));
		ctx.stroke();
		ctx.moveTo(...point(0, -20));
		ctx.lineTo(...point(0, 20));
		ctx.stroke();
		*/
		// draw camera pose
		ctx.fillStyle = "red";
		ctx.fillRect(...point(cameraPose.center.x, cameraPose.center.y), 20, 20);

		ctx.beginPath(); 
		ctx.strokeStyle = "red";
		ctx.moveTo(...point(cameraPose.center.x, cameraPose.center.y));
		ctx.lineTo(...point(cameraPose.north.x, cameraPose.north.y));
		ctx.stroke();

		totems.forEach((totem) => {
			if (activeTotem && totem.x == activeTotem.x && totem.y == activeTotem.y)
				ctx.fillStyle = "blue";
			else
				ctx.fillStyle = "green";
			ctx.fillRect(...point(totem.x, totem.y), 15, 15);
		});
	}

	socket.on('cameraPose', function (data) {
		var cameraPose = data.cameraPose;
		activeTotem = data.activeTotem;
		console.log('cameraPose: [' + cameraPose.center.x + ', ' + cameraPose.center.y + ']');
		redraw(cameraPose);
		setTimeout(() => socket.emit('visualizer-ready'), 200);
	});

	socket.on('totems', function (data) {
		totems = data;
	});

	socket.emit('visualizer-ready');
